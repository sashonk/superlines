/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package superlines.client.ui;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.LinkedList;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JPanel;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import superlines.client.FrameListener;
import superlines.client.SuperlinesController;
import superlines.client.online.SuperlinesControllerImpl;

/**
 *
 * @author Sashonk
 */
public class MainFrame extends javax.swing.JFrame {
	
	public void registerListener(final FrameListener l){
		m_listeners.add(l);
	}
	
	private List<FrameListener> m_listeners = new LinkedList<>();
	
	private final static Log log = LogFactory.getLog(MainFrame.class);

    private static MainFrame instance ;
    
    private static Settings m_settings;
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();

        try{
        	m_settings = new Settings(MainFrame.class.getName());
        	if(m_settings.getWidth()==0 || m_settings.getHeight()==0){
        		setBounds(100, 100, 400, 300);
        	}
        	else{
            	setBounds(m_settings.getX(), m_settings.getY(), m_settings.getWidth(), m_settings.getHeight());       		
        	}
        	
    	}
    	catch(Exception e){
    		log.error("failed read settings", e);
    	}
        
       setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
       
       this.addWindowListener(new WindowAdapter() {
				@Override
				public void windowClosing(WindowEvent evt) {
					try{
						m_settings.setX(MainFrame.this.getX());
						m_settings.setWidth(MainFrame.this.getWidth());
						m_settings.setHeight(MainFrame.this.getHeight());
						m_settings.setY(MainFrame.this.getY());
						m_settings.flush();
					}
					catch(Exception ex){
						log.error("failed flushing settings", ex);
					}
					
					for(FrameListener listener : m_listeners){
						listener.frameClosing();
					}
					
				log.debug("application terminate");
				System.exit(0);
				}
		});
       
  

       this.setTitle("superlines 2.0");
    }
    
    
    public static MainFrame get(){
        if(instance==null){
            instance = new MainFrame();
        }
        
        return instance;
    }
    
    
    public void showScorePanel(){
        showPanel(RatePanel.class);
    }
     public void showPlayPanel(){
        showPanel(PlayPanel.class);
    }   

    
    void showPanel(Class<? extends JPanel> cls){
        for(Component c : getContentPane().getComponents()){
            if(c.getClass()==cls){
                c.setVisible(true);                
            }
            else{
                c.setVisible(false);
            }
        }
        
    }
    
    void shutdown(){
        System.exit(0);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
